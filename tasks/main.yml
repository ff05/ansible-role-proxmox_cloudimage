---
- name: get the name and url of the debian cloudimage file
  import_tasks: debian_cloudimage_url.yml

- name: remove the extension from the image filename to get the vm name
  ansible.builtin.set_fact:
    debian_template_name: "{{ debian_cloudimage_filename.rsplit('.', 1)[0] }}"

- name: get list of vms
  ansible.builtin.command: qm list
  changed_when: false
  register: qmlist

- name: check if vm exists and get its vmid
  ansible.builtin.set_fact:
    debian_template_existed: "{{ debian_template_name in qmlist.stdout }}"
    debian_template_created: false

- name: store vmid of the existing vm
  ansible.builtin.set_fact:
    debian_template_vmid: "{{ qmlist.stdout | regex_search('(\\d+) %s' % debian_template_name, '\\1') | first }}"
  when: debian_template_existed

- name: get the next free vmid
  ansible.builtin.command: pvesh get /cluster/nextid
  changed_when: false
  register: nextid
  when: not debian_template_existed

- name: store vmid of the new vm
  ansible.builtin.set_fact:
    debian_template_vmid: "{{ nextid.stdout }}"
  when: not debian_template_existed

- name: create the template vm
  ansible.builtin.command: >-
    qm create {{ debian_template_vmid }}
    -name {{ debian_template_name }}
    -template 1 -ostype l26 -agent 1
    -scsihw virtio-scsi-pci
    -boot c -bootdisk virtio0
    -net0 virtio,bridge=vmbr0 -serial0 socket -vga serial0
    -ide2 {{ proxmox_template_storage }}:cloudinit
    -rng0 source=/dev/random
    {{ "-pool %s" % proxmox_template_pool if proxmox_template_pool is defined }}
  when: not debian_template_existed

- name: get the checksum of the cloudimage file
  import_tasks: debian_cloudimage_checksum.yml
  when: not debian_template_existed

- block:
    - name: download the image
      ansible.builtin.get_url:
        url: "{{ debian_cloudimage_url }}"
        dest: "/tmp/{{ debian_cloudimage_filename }}"
        checksum: "sha512:{{ debian_cloudimage_checksum }}"
        mode: 0644

    - name: add qemu-guest-agent
      ansible.builtin.command: virt-customize -a /tmp/{{ debian_cloudimage_filename }} --install qemu-guest-agent
      changed_when: true
      when: debian_cloudimage_qemuagent

    - name: import the image to the template vm
      ansible.builtin.command: >-
        qm importdisk {{ debian_template_vmid }}
        /tmp/{{ debian_cloudimage_filename }}
        {{ proxmox_template_storage }} --format {{ debian_cloudimage_format }}
      register: qmimportdisk
      failed_when: "'Successfully imported disk' not in qmimportdisk.stdout"
      changed_when: true

    - name: attach the disk as virtio0
      ansible.builtin.command: >-
        qm set {{ debian_template_vmid }}
        -virtio0 {{ qmimportdisk.stdout | regex_search("imported disk as 'unused\d+:([^']+)'", "\1") | first }},{{ ",%s" % debian_cloudimage_diskparams if debian_cloudimage_diskparams is defined }}
      register: qmset
      changed_when: true
    
    - name: store debian_template_created=true
      ansible.builtin.set_fact:
        debian_template_created: true

  rescue:
    - name: something failed, remove the vm that is left without a disk
      ansible.builtin.command: >-
        qm destroy {{ debian_template_vmid }} -destroy-unreferenced-disks 1
      changed_when: true

  always:
    - name: clean up the temporary file
      ansible.builtin.file:
        path: "/tmp/{{ debian_cloudimage_filename }}"
        state: absent
      when: not debian_cloudimage_keep

  when: not debian_template_existed
